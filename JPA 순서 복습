
주소 요청 - URL 요청이 무조건 들어간다
	
	httpRequest ---> 		Security		 ----> 		Controller

			Manager를 먼저 만나게 됨 
			(매니저는 필수임)

			Provider로 권한 요청

			UserDetailService 구현
	
			User --입력받은 유저네임과 패스워드를 비교 검사
				(로그인 확인)
	


	어디에 제일 먼저 갈까? 컨피그에 작성해 둔 필터체인에 제일 먼저 간다.
	컨트롤러 가기 전에 시큐리티에 먼저 간다!! (컨트롤 앞에 시큐리티가 추가된 개념이라고 보면 된다.)

	요청이 들어오면 시큐리티 매니저, 프로바이더는 이미 동작중이다.
	요청 -> 시큐리티 -> 매니저 -> 프로바이더 -> 유저디테일 -> 프로바이더 -> 매니저 -> 컨트롤

	필터체인이 먼저 모든 동작을 활성화시키는데 그 환경설정이 매니저에 의해 관리가 된다.
	매니저가 권한(회원 로그인 정보), 인가 등등 전부 관리한다.
	프로바이더는 권한 허가임. 권한으로 만들어 놓은 것 -- 유저 롤 권한 (어드민, 유저/ 권한으로 유저와 어드민이 이넘으로 추가된 상태)
		그 모든 것을 관리하는 것은 결국에 매니저이다.

	사용자가 로그인해달라 요청 --> 그러나 포스트매핑을 만들지 않았다. 왜냐? 매니저가 모든 걸 다 관리해주기 때문이다.
	시큐리티가 로그인에 대해 다 처리하게 되고 유저디테일 서비스를 호출한다.
	그래서 이사람의 권한이 무엇인지 확인하고, 로그인 실패 성공 여부를 다 따져서 결과를 시큐리티에 보내주고 그 다음에 컨트롤러로 넘어간다

	로그인 폼.html에는 포스트 방식으로 유저 로그인 경로를 보낸다는 코드가 있는데 우리는 포스트매핑을 만들지 않음
	>> 시큐리티에서 다 해주기 때문이다.
	디폴트 설정되어있는 파라미터가 유저네임, 패스워드이다. (근데 이름을 id, pw이렇게 하면 넘겨주지 못한다.)

	로그인 성공했는지 안했는지는 매니저가 프로바이더에 요청하고 유저디테일 서비스에 요청한다. 즉 시큐리티가 다 해준다!
	매니저를 거쳐서 유저서비스를 요청 --> 해당 권한을 가져옴
		뉴 유저 생성 --> 데이터베이스에서 꺼낸 유저네임과 패스워드 -->입력한 유저네임과 패스워드를 비교 
			--> 우리가 만든 게 아니라 시큐리티에서 제공해주는 기능 (알아서 다 체크해주고 비교해줌)
	근데 자동으로 데이터베이스까지 가서 검색하는게 아니라 그건 우리가 설정해줘야함 (옵셔널)
		설정만 해주면 알아서 찾아서 비교해줌 (검색하라는 코드만 추가하면 됨)

	마지막에 컨트롤에 루트 설정된 곳으로 이동하는 것. (최종적으로)
